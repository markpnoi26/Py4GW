# PyInventory.pyi - Auto-generated .pyi file for PyInventory module

from typing import Any
from typing import List

from .PyItem import PyItem

# Class Bag (SafeBag)
class Bag:
    id: int
    name: str
    container_item: int
    items_count: int
    is_inventory_bag: bool
    is_storage_bag: bool
    is_material_storage: bool

    def __init__(self, bag_id: int, bag_name: str) -> None: ...
    def GetItems(self) -> List[PyItem]: ...
    def GetItemByIndex(self, index: int) -> PyItem: ...
    def GetItemCount(self) -> int: ...
    def GetSize(self) -> int: ...
    def FindItemById(self, item_id: int) -> PyItem: ...
    def GetContext(self) -> None: ...


# Class Inventory
class PyInventory:
    def __init__(self) -> None: ...
    def OpenXunlaiWindow(self) -> None: ...
    def GetIsStorageOpen(self) -> bool: ...
    def PickUpItem(self, item_id: int, call_target: bool = False) -> bool: ...
    def DropItem(self, item_id: int, quantity: int = 1) -> bool: ...
    def EquipItem(self, item_id: int, agent_id: int) -> bool: ...
    def UseItem(self, item_id: int) -> bool: ...
    def DestroyItem(self, item_id: int) -> bool: ...
    def IdentifyItem(self, id_kit_id: int, item_id: int) -> bool: ...
    def GetHoveredItemID(self) -> int: ...
    def GetGoldAmount(self) -> int: ...
    def GetGoldAmountInStorage(self) -> int: ...
    def DepositGold(self, amount: int) -> int: ...
    def WithdrawGold(self, amount: int) -> int: ...
    def DropGold(self, amount: int) -> bool: ...
    def MoveItem(self, item_id: int, bag_id: int, slot: int, quantity: int = 1) -> bool: ...
    def Salvage(self, salv_kit_id: int, item_id: int) -> None: ...
    def AcceptSalvageWindow(self) -> None: ...
